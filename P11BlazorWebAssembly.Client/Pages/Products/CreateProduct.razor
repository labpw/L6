@page "/products/createproduct"

@inject IProductService ProductService
@inject NavigationManager NavigationManager

<h3>Create Product</h3>

@if (message != null)
{
    <p><em>@message</em></p>
}
else
{
    <EditForm Model="product" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="title">Title:</label>
            <InputText id="title" @bind-Value="product.Title" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="barcode">Barcode:</label>
            <InputText id="barcode" @bind-Value="product.Barcode" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="price">Price:</label>
            <InputNumber id="price" @bind-Value="product.Price" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label for="releaseDate">Release Date:</label>
            <InputDate id="releaseDate" @bind-Value="product.ReleaseDate" class="form-control"></InputDate>
        </div>
        <div class="form-group">
            <label for="description">Description:</label>
            <InputTextArea id="description" @bind-Value="product.Description" class="form-control"></InputTextArea>
        </div>
        <button type="submit" class="btn btn-primary">Update</button>
    </EditForm>  
}



@code { 
    private Product product = new Product();
    private string? message = null;

    async Task HandleValidSubmit()
    {
        var response = await ProductService.CreateProductAsync(product);
        if (response.Success)
            NavigationManager.NavigateTo("/products/productsList");
        else
            message = response.Message;
    }

  
}
